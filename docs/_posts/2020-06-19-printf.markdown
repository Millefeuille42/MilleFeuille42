---
layout: post
title: "Get Next Line"
permalink: /printf/
categories: entries
author: Millefeuille
---
---
This project is pretty straight forward. You will recode printf. You will then be allowed to reuse the function in your future projects. You will mainly learn how to use variadic arguments.

---

### Walkthrough
#### The function
##### Inputs
ft_printf takes two inputs
- `char *format` which is the same as `printf()`.
- A `va_list` containing every arguments required for conversions.
##### Output
ft_printf outputs an `int`, this `int` will permit the caller to determine how many characters were printed.

#### The concept
The concept of ft_printf is as follows:
- Parse the format and define conversions, flags and flags arguments;
- Print the appropriate output.

#### Syntax
A conversion specification consists of optional and mandatory fields formatted as follows:
`%[flags][width][.precision][size]Conversion`

##### Conversions
- c = Character;
- s = String;
- p = Pointer Type;
- d = Int;
- i = same as d;
- u = Unsigned int;
- x = Hexadecimal number;
- X = Hexadecimal number;
##### Flags
- \- = Add `[width]` minus the length of the conversion


### Tips

### References and Knowledge
- `man 3 printf `
- `man 3 stdarg`

**  Flags :
**  0 = Si width est prefixe par 0, des zeros non significatifs sont ajoutes
**  jusqu'a ce que la largeur minimale soit atteinte. Si 0 et - apparaissent,
**  0 est ignore.
**  * = si width = *, alors le prochain argument definit width.
**
**  Width : largeur de l'output - si elle est superieure a l'output, on
**  complete avec des espaces pour fill (ou des 0 si un seul flag = 0)
**
**  Precision :
**  . = suivi d'un entier decimal positif qui selon le type de conversion,
**  va affecter differemment l'output.
**      c -> aucun effet
**      s -> nombre max de caracteres a imprimer
**      d, i, u, x, X -> nombre min de chiffres a imprimer (par defaut a un)
**      si le nombre de chiffres de l'arg est inferieur a precision, la valeur
**      de sortie est remplie a gauche de 0 (si precision = 0 et valeur a
**      convertir = 0 -> pas d'output).
